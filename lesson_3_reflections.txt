Question 1 - When would you want to use a remote repository rather than keeping all your work local?

Remote repository can be used as a container which holds all the commits which we wish to share with the general public.. Also, a remote repository can also work as the meeting center where multiple people working on the same repository can submit their own versions.

Question 2 - Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Pulling changes manually is a much better method than automating this task to Git, since there might be changes in the remote that the author/contributor might not want to include in their local repository.. Or, in case, of multiple people working on a certain project, each individual is supposed to be handling a particular task.

And, sometimes, these tasks are independent from each other and hence, it is not required by the members of the team to exactly know or keep track of the changes happening on the other aspects of the project, until and unless, that aspect affects their respective responsibilites... In this case, pulling a branch from remote to local repository is required. Hence, pulling should remain an individual's decision instead of Git.

Question 3 - Describe the differences between forks, clones, and branches. When would you use one instead of another?

Branches, Forks and Clones can be considered as different ways to exercise version control your content... The differences between the three of them are mentioned below:

	Branches: They are the labels given to the commits made by Git. They are exclusively used inside a single repository (local, remote). Even though, they work inside a repository, they are considered to be the most important form of version control since they allow an individual the ability to 'context switch' (it gives us an opportunity to change our mindset which is required while switching between various aspects of the project).

	Clones: It is a feature of Git which allows us to copy on entire repository from one computer to another (including its contents as well as commit history). It is used when we wish to clone an existing repository as a remote for another local repository (like from GitHub to Local) or can clone a local repository into another spot on an individual's computer to create two local versions of a repository (from Local to Local).

	Forks: It is a feature of GitHub which allows us to make a copy of somebody else's repository directly on the GitHub servers without pulling down the code to an individual's local machine first. In other simple words, fork is just a clone that makes GitHub makes for the users on their own machines (servers). They are used when we wish to clone a repository without discrediting the work of the original author and we don't have permission to commit changes to the original repository (from GitHub to GitHub).